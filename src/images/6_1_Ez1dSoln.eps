%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, February 4, 2014 4:47:57 PM EST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
7.00000 6.01576 376.984 376.484 rc
newpath
381.984 18.6957 m
381.984 18.6957 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
2 J
0 j
[ 1.00000 0 0 1.00000 378.484 15.1957 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -378.484 -15.1957 ] concat
[ 1.00000 0 0 1.00000 4.50000 367.320 ] concat
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
S
newpath
6.00000 3.00000 m
6.00000 4.65685 4.65685 6.00000 3.00000 6.00000  c
1.34314 6.00000 0 4.65685 0 3.00000  c
0 1.34314 1.34314 0 3.00000 0  c
4.65685 0 6.00000 1.34314 6.00000 3.00000  c
h
f
[ 1.00000 0 0 1.00000 -4.50000 -367.320 ] concat
Q
q
2.00000 w
1.00000 0 0 RG
6.00000 5.01576 378.984 378.484 rc
newpath
8.00000 370.820 m
381.984 18.6957 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
2.00000 w
0 0 1.00000 RG
6.00000 5.01576 378.984 378.484 rc
newpath
8.00000 370.820 m
9.96626 371.573 l
11.6771 372.206 l
13.6011 372.892 l
15.5378 373.557 l
17.4654 374.192 l
19.2525 374.757 l
21.1029 375.318 l
23.0166 375.873 l
24.9242 376.400 l
26.8864 376.915 l
28.6147 377.346 l
30.5603 377.806 l
32.5140 378.241 l
34.3967 378.633 l
36.1063 378.968 l
38.1393 379.340 l
39.8615 379.631 l
41.8648 379.944 l
43.6380 380.196 l
45.5836 380.448 l
47.4362 380.663 l
49.3692 380.860 l
51.1444 381.018 l
53.0591 381.164 l
55.0479 381.287 l
56.7792 381.372 l
58.6490 381.439 l
60.5808 381.483 l
62.4706 381.499 l
64.2991 381.491 l
66.3293 381.454 l
68.1536 381.396 l
70.1013 381.308 l
71.8663 381.205 l
73.7959 381.067 l
75.6115 380.912 l
77.5093 380.726 l
79.3648 380.519 l
81.3073 380.276 l
83.1781 380.016 l
85.0914 379.725 l
86.9887 379.411 l
88.7322 379.099 l
90.7305 378.716 l
92.5177 378.349 l
94.4233 377.932 l
96.2472 377.509 l
98.2724 377.012 l
100.026 376.557 l
102.016 376.015 l
103.830 375.496 l
105.814 374.902 l
107.527 374.367 l
109.476 373.732 l
111.360 373.093 l
113.242 372.429 l
115.118 371.742 l
116.919 371.059 l
118.867 370.295 l
120.723 369.541 l
122.677 368.721 l
124.445 367.956 l
126.399 367.084 l
128.271 366.223 l
130.139 365.339 l
132.090 364.390 l
133.886 363.492 l
135.726 362.548 l
137.758 361.478 l
139.597 360.484 l
141.478 359.442 l
143.391 358.357 l
145.149 357.336 l
147.024 356.224 l
148.884 355.096 l
150.874 353.861 l
152.630 352.749 l
154.656 351.438 l
156.484 350.229 l
158.293 349.011 l
160.238 347.674 l
162.191 346.305 l
163.968 345.035 l
165.855 343.663 l
167.697 342.299 l
169.694 340.793 l
171.421 339.467 l
173.405 337.918 l
175.270 336.436 l
177.117 334.944 l
178.966 333.427 l
180.851 331.854 l
182.849 330.160 l
184.682 328.581 l
186.491 326.999 l
188.424 325.282 l
190.354 323.543 l
192.085 321.959 l
194.137 320.055 l
195.853 318.438 l
197.861 316.521 l
199.777 314.665 l
201.488 312.986 l
203.412 311.072 l
205.349 309.119 l
207.276 307.149 l
209.063 305.298 l
210.914 303.358 l
212.827 301.326 l
214.735 299.275 l
216.697 297.138 l
218.425 295.233 l
220.371 293.063 l
222.325 290.857 l
224.207 288.705 l
225.917 286.729 l
227.950 284.353 l
229.672 282.317 l
231.675 279.921 l
233.449 277.777 l
235.394 275.399 l
237.247 273.110 l
239.180 270.695 l
240.955 268.454 l
242.870 266.011 l
244.859 263.446 l
246.590 261.191 l
248.460 258.731 l
250.391 256.163 l
252.281 253.626 l
254.110 251.146 l
256.140 248.365 l
257.964 245.841 l
259.912 243.120 l
261.677 240.632 l
263.607 237.885 l
265.422 235.277 l
267.320 232.525 l
269.175 229.811 l
271.118 226.942 l
272.989 224.154 l
274.902 221.277 l
276.799 218.398 l
278.543 215.730 l
280.541 212.645 l
282.328 209.862 l
284.234 206.870 l
286.058 203.982 l
288.083 200.747 l
289.837 197.923 l
291.827 194.690 l
293.641 191.720 l
295.626 188.443 l
297.338 185.594 l
299.288 182.323 l
301.171 179.138 l
303.053 175.930 l
304.929 172.709 l
306.730 169.591 l
308.678 166.194 l
310.534 162.931 l
312.488 159.471 l
314.256 156.315 l
316.211 152.801 l
318.083 149.410 l
319.950 146.003 l
321.901 142.417 l
323.697 139.090 l
325.537 135.660 l
327.569 131.844 l
329.408 128.363 l
331.289 124.779 l
333.202 121.108 l
334.961 117.711 l
336.835 114.065 l
338.695 110.423 l
340.685 106.499 l
342.441 103.013 l
344.467 98.9641 l
346.295 95.2847 l
348.104 91.6208 l
350.049 87.6549 l
352.002 83.6459 l
353.779 79.9747 l
355.667 76.0514 l
357.508 72.1981 l
359.505 67.9939 l
361.232 64.3332 l
363.216 60.1026 l
365.081 56.0999 l
366.928 52.1116 l
368.777 48.0957 l
370.662 43.9747 l
372.661 39.5789 l
374.493 35.5234 l
376.302 31.4966 l
378.235 27.1663 l
380.165 22.8188 l
381.984 18.6957 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 0 0 RG
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
122 173 72 21 rc
newpath
125.953 194.468 m
127.036 193.718 128.390 192.593 130.015 191.093  c
130.343 190.781 l
130.281 189.416 130.109 187.979 129.828 186.468  c
129.546 184.958 129.255 183.864 128.953 183.187  c
128.692 182.635 128.487 182.309 128.335 182.210  c
128.184 182.112 127.781 182.046 127.125 182.015  c
126.921 182.000 l
127.015 181.453 l
130.203 181.453 l
131.119 183.609 131.645 186.130 131.781 189.015  c
132.859 187.640 l
133.932 186.276 134.645 185.278 135.000 184.648  c
135.354 184.018 135.531 183.437 135.531 182.906  c
135.531 182.354 135.296 181.869 134.828 181.453  c
137.000 181.453 l
137.135 181.713 137.203 181.963 137.203 182.203  c
137.203 182.703 137.039 183.224 136.710 183.765  c
136.382 184.307 135.703 185.197 134.671 186.437  c
131.328 190.421 l
130.005 192.015 129.015 193.364 128.359 194.468  c
125.953 194.468 l
h
f
newpath
143.578 187.859 m
143.750 186.984 l
154.156 186.984 l
153.984 187.859 l
143.578 187.859 l
h
144.218 184.593 m
144.390 183.734 l
154.812 183.734 l
154.625 184.593 l
144.218 184.593 l
h
f
newpath
161.843 191.000 m
163.296 183.734 l
163.390 183.255 163.437 182.838 163.437 182.484  c
163.437 182.224 163.213 182.078 162.765 182.046  c
162.171 182.015 l
162.015 182.000 l
162.125 181.453 l
165.484 181.453 l
164.703 185.359 l
166.453 182.619 168.057 181.250 169.515 181.250  c
170.474 181.250 170.953 181.791 170.953 182.875  c
170.953 183.093 170.927 183.322 170.875 183.562  c
170.750 184.140 l
170.500 185.359 l
172.343 182.609 173.968 181.234 175.375 181.234  c
176.322 181.234 176.796 181.822 176.796 183.000  c
176.796 183.281 176.744 183.682 176.640 184.203  c
175.734 188.718 l
175.640 189.208 175.593 189.625 175.593 189.968  c
175.593 190.229 175.822 190.375 176.281 190.406  c
176.859 190.453 l
177.031 190.453 l
176.906 191.000 l
173.546 191.000 l
175.015 183.687 l
175.057 183.479 175.078 183.312 175.078 183.187  c
175.078 182.750 174.916 182.531 174.593 182.531  c
174.125 182.531 173.453 182.945 172.578 183.773  c
171.703 184.601 170.958 185.531 170.343 186.562  c
169.437 191.000 l
167.703 191.000 l
169.156 183.687 l
169.197 183.468 169.218 183.302 169.218 183.187  c
169.218 182.750 169.062 182.531 168.750 182.531  c
168.270 182.531 167.596 182.942 166.726 183.765  c
165.856 184.588 165.099 185.536 164.453 186.609  c
163.578 191.000 l
161.843 191.000 l
h
f
newpath
f
newpath
185.671 186.156 m
184.593 183.734 l
184.156 182.843 l
184.000 182.500 183.869 182.283 183.765 182.195  c
183.661 182.106 183.468 182.057 183.187 182.046  c
182.656 182.015 l
182.500 182.000 l
182.593 181.453 l
185.453 181.453 l
187.203 185.203 l
187.593 184.875 l
188.739 183.947 189.312 183.177 189.312 182.562  c
189.312 182.239 189.182 181.869 188.921 181.453  c
190.656 181.453 l
190.718 181.661 190.750 181.843 190.750 182.000  c
190.750 182.500 190.572 182.955 190.218 183.367  c
189.864 183.778 189.067 184.453 187.828 185.390  c
187.406 185.703 l
188.859 188.734 l
189.390 189.703 l
189.619 190.151 189.911 190.390 190.265 190.421  c
190.843 190.453 l
191.000 190.453 l
190.890 191.000 l
188.015 191.000 l
185.953 186.656 l
185.203 187.328 l
184.005 188.401 183.406 189.328 183.406 190.109  c
183.406 190.421 183.505 190.718 183.703 191.000  c
181.828 191.000 l
181.807 190.833 181.796 190.708 181.796 190.625  c
181.796 189.875 182.343 189.020 183.437 188.062  c
184.796 186.906 l
185.671 186.156 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 0 1.00000 RG
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
261 241 92 28 rc
newpath
264.953 269.468 m
266.036 268.718 267.390 267.593 269.015 266.093  c
269.343 265.781 l
269.281 264.416 269.109 262.979 268.828 261.468  c
268.546 259.958 268.255 258.864 267.953 258.187  c
267.692 257.635 267.487 257.309 267.335 257.210  c
267.184 257.112 266.781 257.046 266.125 257.015  c
265.921 257.000 l
266.015 256.453 l
269.203 256.453 l
270.119 258.609 270.645 261.130 270.781 264.015  c
271.859 262.640 l
272.932 261.276 273.645 260.278 274.000 259.648  c
274.354 259.018 274.531 258.437 274.531 257.906  c
274.531 257.354 274.296 256.869 273.828 256.453  c
276.000 256.453 l
276.135 256.713 276.203 256.963 276.203 257.203  c
276.203 257.703 276.039 258.224 275.710 258.765  c
275.382 259.307 274.703 260.197 273.671 261.437  c
270.328 265.421 l
269.005 267.015 268.015 268.364 267.359 269.468  c
264.953 269.468 l
h
f
newpath
282.578 262.859 m
282.750 261.984 l
293.156 261.984 l
292.984 262.859 l
282.578 262.859 l
h
283.218 259.593 m
283.390 258.734 l
293.812 258.734 l
293.625 259.593 l
283.218 259.593 l
h
f
newpath
303.671 261.156 m
302.593 258.734 l
302.156 257.843 l
302.000 257.500 301.869 257.283 301.765 257.195  c
301.661 257.106 301.468 257.057 301.187 257.046  c
300.656 257.015 l
300.500 257.000 l
300.593 256.453 l
303.453 256.453 l
305.203 260.203 l
305.593 259.875 l
306.739 258.947 307.312 258.177 307.312 257.562  c
307.312 257.239 307.182 256.869 306.921 256.453  c
308.656 256.453 l
308.718 256.661 308.750 256.843 308.750 257.000  c
308.750 257.500 308.572 257.955 308.218 258.367  c
307.864 258.778 307.067 259.453 305.828 260.390  c
305.406 260.703 l
306.859 263.734 l
307.390 264.703 l
307.619 265.151 307.911 265.390 308.265 265.421  c
308.843 265.453 l
309.000 265.453 l
308.890 266.000 l
306.015 266.000 l
303.953 261.656 l
303.203 262.328 l
302.005 263.401 301.406 264.328 301.406 265.109  c
301.406 265.421 301.505 265.718 301.703 266.000  c
299.828 266.000 l
299.807 265.833 299.796 265.708 299.796 265.625  c
299.796 264.875 300.343 264.020 301.437 263.062  c
302.796 261.906 l
303.671 261.156 l
h
f
newpath
309.203 255.000 m
309.359 254.234 l
309.859 253.213 310.849 252.125 312.328 250.968  c
313.031 250.421 l
314.708 249.119 315.546 247.937 315.546 246.875  c
315.546 245.666 314.968 245.062 313.812 245.062  c
312.697 245.062 312.046 245.421 311.859 246.140  c
311.718 246.687 l
311.687 246.812 l
311.015 246.812 l
311.312 245.296 l
312.239 244.849 313.197 244.625 314.187 244.625  c
315.052 244.625 315.731 244.820 316.226 245.210  c
316.721 245.601 316.968 246.140 316.968 246.828  c
316.968 247.484 316.778 248.062 316.398 248.562  c
316.018 249.062 315.338 249.619 314.359 250.234  c
313.312 250.890 l
311.666 251.921 310.843 252.895 310.843 253.812  c
315.562 253.812 l
315.234 255.000 l
309.203 255.000 l
h
f
q
316 251 18 18 rc
newpath
334.796 261.062 m
322.921 261.062 l
323.093 260.125 l
334.968 260.125 l
334.796 261.062 l
h
f
Q
newpath
347.953 252.875 m
345.796 263.718 l
345.703 264.208 345.656 264.630 345.656 264.984  c
345.656 265.234 345.880 265.375 346.328 265.406  c
346.921 265.453 l
347.953 265.453 l
347.843 266.000 l
341.125 266.000 l
341.218 265.453 l
342.265 265.453 l
342.817 265.453 343.195 265.398 343.398 265.289  c
343.601 265.179 343.750 264.947 343.843 264.593  c
344.062 263.718 l
345.671 255.656 l
345.796 254.765 l
345.859 254.453 l
345.817 254.255 345.640 254.156 345.328 254.156  c
345.213 254.156 344.875 254.208 344.312 254.312  c
343.406 254.484 l
343.515 253.937 l
347.953 252.875 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
8.00000 319.252 m
381.984 319.252 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
216 340 13 15 rc
newpath
222.250 346.250 m
222.458 346.468 222.614 346.692 222.718 346.921  c
222.802 347.067 222.927 347.463 223.093 348.109  c
223.656 347.281 l
223.802 347.072 223.981 346.877 224.195 346.695  c
224.408 346.513 224.593 346.385 224.750 346.312  c
224.854 346.270 224.968 346.250 225.093 346.250  c
225.270 346.250 225.414 346.299 225.523 346.398  c
225.632 346.497 225.687 346.614 225.687 346.750  c
225.687 346.916 225.656 347.031 225.593 347.093  c
225.479 347.197 225.343 347.250 225.187 347.250  c
225.093 347.250 225.000 347.229 224.906 347.187  c
224.708 347.125 224.572 347.093 224.500 347.093  c
224.395 347.093 224.276 347.151 224.140 347.265  c
223.880 347.484 223.567 347.911 223.203 348.546  c
223.718 350.718 l
223.802 351.052 223.869 351.252 223.921 351.320  c
223.974 351.388 224.031 351.421 224.093 351.421  c
224.177 351.421 224.281 351.375 224.406 351.281  c
224.635 351.083 224.833 350.828 225.000 350.515  c
225.218 350.625 l
224.947 351.125 224.609 351.541 224.203 351.875  c
223.974 352.062 223.776 352.156 223.609 352.156  c
223.369 352.156 223.182 352.020 223.046 351.750  c
222.953 351.583 222.770 350.875 222.500 349.625  c
221.833 350.770 221.302 351.505 220.906 351.828  c
220.645 352.046 220.395 352.156 220.156 352.156  c
219.989 352.156 219.833 352.093 219.687 351.968  c
219.593 351.875 219.546 351.750 219.546 351.593  c
219.546 351.458 219.593 351.343 219.687 351.250  c
219.781 351.156 219.895 351.109 220.031 351.109  c
220.166 351.109 220.307 351.177 220.453 351.312  c
220.567 351.406 220.656 351.453 220.718 351.453  c
220.760 351.453 220.822 351.421 220.906 351.359  c
221.104 351.192 221.375 350.843 221.718 350.312  c
222.062 349.781 222.286 349.395 222.390 349.156  c
222.130 348.125 221.989 347.583 221.968 347.531  c
221.875 347.250 221.750 347.052 221.593 346.937  c
221.437 346.822 221.203 346.765 220.890 346.765  c
220.796 346.765 220.687 346.770 220.562 346.781  c
220.562 346.546 l
222.250 346.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
62.7687 319.252 m
62.7687 323.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
59.4687 335.750 m
59.4687 334.770 59.6171 333.924 59.9140 333.210  c
60.2109 332.497 60.6041 331.968 61.0937 331.625  c
61.4791 331.354 61.8750 331.218 62.2812 331.218  c
62.9375 331.218 63.5260 331.552 64.0468 332.218  c
64.7031 333.052 65.0312 334.182 65.0312 335.609  c
65.0312 336.609 64.8880 337.458 64.6015 338.156  c
64.3151 338.854 63.9479 339.362 63.5000 339.679  c
63.0520 339.997 62.6250 340.156 62.2187 340.156  c
61.3958 340.156 60.7083 339.671 60.1562 338.703  c
59.6979 337.880 59.4687 336.895 59.4687 335.750  c
h
60.7187 335.906 m
60.7187 337.093 60.8645 338.062 61.1562 338.812  c
61.3958 339.437 61.7552 339.750 62.2343 339.750  c
62.4635 339.750 62.7005 339.648 62.9453 339.445  c
63.1901 339.242 63.3750 338.895 63.5000 338.406  c
63.6979 337.687 63.7968 336.661 63.7968 335.328  c
63.7968 334.349 63.6927 333.531 63.4843 332.875  c
63.3385 332.385 63.1406 332.041 62.8906 331.843  c
62.7239 331.708 62.5156 331.640 62.2656 331.640  c
61.9843 331.640 61.7291 331.765 61.5000 332.015  c
61.1979 332.369 60.9921 332.924 60.8828 333.679  c
60.7734 334.434 60.7187 335.177 60.7187 335.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
128.880 319.252 m
128.880 323.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
125.468 337.750 m
125.468 336.770 125.617 335.924 125.914 335.210  c
126.210 334.497 126.604 333.968 127.093 333.625  c
127.479 333.354 127.875 333.218 128.281 333.218  c
128.937 333.218 129.526 333.552 130.046 334.218  c
130.703 335.052 131.031 336.182 131.031 337.609  c
131.031 338.609 130.888 339.458 130.601 340.156  c
130.315 340.854 129.947 341.362 129.500 341.679  c
129.052 341.997 128.625 342.156 128.218 342.156  c
127.395 342.156 126.708 341.671 126.156 340.703  c
125.697 339.880 125.468 338.895 125.468 337.750  c
h
126.718 337.906 m
126.718 339.093 126.864 340.062 127.156 340.812  c
127.395 341.437 127.755 341.750 128.234 341.750  c
128.463 341.750 128.700 341.648 128.945 341.445  c
129.190 341.242 129.375 340.895 129.500 340.406  c
129.697 339.687 129.796 338.661 129.796 337.328  c
129.796 336.349 129.692 335.531 129.484 334.875  c
129.338 334.385 129.140 334.041 128.890 333.843  c
128.724 333.708 128.515 333.640 128.265 333.640  c
127.984 333.640 127.729 333.765 127.500 334.015  c
127.197 334.369 126.992 334.924 126.882 335.679  c
126.773 336.434 126.718 337.177 126.718 337.906  c
h
133.125 340.765 m
133.322 340.765 133.489 340.835 133.625 340.976  c
133.760 341.117 133.828 341.281 133.828 341.468  c
133.828 341.666 133.760 341.833 133.625 341.968  c
133.489 342.104 133.322 342.171 133.125 342.171  c
132.927 342.171 132.760 342.104 132.625 341.968  c
132.489 341.833 132.421 341.666 132.421 341.468  c
132.421 341.270 132.489 341.104 132.625 340.968  c
132.760 340.833 132.927 340.765 133.125 340.765  c
h
140.390 333.390 m
139.890 334.468 l
137.312 334.468 l
136.750 335.625 l
137.864 335.791 138.750 336.208 139.406 336.875  c
139.968 337.447 140.250 338.125 140.250 338.906  c
140.250 339.364 140.158 339.786 139.976 340.171  c
139.794 340.557 139.562 340.885 139.281 341.156  c
139.000 341.427 138.687 341.640 138.343 341.796  c
137.864 342.036 137.364 342.156 136.843 342.156  c
136.333 342.156 135.960 342.067 135.726 341.890  c
135.492 341.713 135.375 341.520 135.375 341.312  c
135.375 341.187 135.424 341.080 135.523 340.992  c
135.622 340.903 135.744 340.859 135.890 340.859  c
135.994 340.859 136.088 340.875 136.171 340.906  c
136.255 340.937 136.395 341.026 136.593 341.171  c
136.916 341.390 137.239 341.500 137.562 341.500  c
138.062 341.500 138.497 341.312 138.867 340.937  c
139.237 340.562 139.421 340.104 139.421 339.562  c
139.421 339.041 139.255 338.557 138.921 338.109  c
138.588 337.661 138.130 337.312 137.546 337.062  c
137.078 336.875 136.447 336.765 135.656 336.734  c
137.312 333.390 l
140.390 333.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.992 319.252 m
194.992 323.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
197.531 334.234 m
199.625 333.218 l
199.828 333.218 l
199.828 340.484 l
199.828 340.963 199.849 341.263 199.890 341.382  c
199.932 341.502 200.015 341.593 200.140 341.656  c
200.265 341.718 200.520 341.755 200.906 341.765  c
200.906 342.000 l
197.671 342.000 l
197.671 341.765 l
198.078 341.755 198.341 341.718 198.460 341.656  c
198.580 341.593 198.664 341.510 198.710 341.406  c
198.757 341.302 198.781 340.994 198.781 340.484  c
198.781 335.843 l
198.781 335.208 198.760 334.802 198.718 334.625  c
198.687 334.489 198.632 334.390 198.554 334.328  c
198.476 334.265 198.380 334.234 198.265 334.234  c
198.109 334.234 197.895 334.302 197.625 334.437  c
197.531 334.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
261.103 319.252 m
261.103 323.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
259.531 334.234 m
261.625 333.218 l
261.828 333.218 l
261.828 340.484 l
261.828 340.963 261.849 341.263 261.890 341.382  c
261.932 341.502 262.015 341.593 262.140 341.656  c
262.265 341.718 262.520 341.755 262.906 341.765  c
262.906 342.000 l
259.671 342.000 l
259.671 341.765 l
260.078 341.755 260.341 341.718 260.460 341.656  c
260.580 341.593 260.664 341.510 260.710 341.406  c
260.757 341.302 260.781 340.994 260.781 340.484  c
260.781 335.843 l
260.781 335.208 260.760 334.802 260.718 334.625  c
260.687 334.489 260.632 334.390 260.554 334.328  c
260.476 334.265 260.380 334.234 260.265 334.234  c
260.109 334.234 259.895 334.302 259.625 334.437  c
259.531 334.234 l
h
266.125 340.765 m
266.322 340.765 266.489 340.835 266.625 340.976  c
266.760 341.117 266.828 341.281 266.828 341.468  c
266.828 341.666 266.760 341.833 266.625 341.968  c
266.489 342.104 266.322 342.171 266.125 342.171  c
265.927 342.171 265.760 342.104 265.625 341.968  c
265.489 341.833 265.421 341.666 265.421 341.468  c
265.421 341.270 265.489 341.104 265.625 340.968  c
265.760 340.833 265.927 340.765 266.125 340.765  c
h
273.390 333.390 m
272.890 334.468 l
270.312 334.468 l
269.750 335.625 l
270.864 335.791 271.750 336.208 272.406 336.875  c
272.968 337.447 273.250 338.125 273.250 338.906  c
273.250 339.364 273.158 339.786 272.976 340.171  c
272.794 340.557 272.562 340.885 272.281 341.156  c
272.000 341.427 271.687 341.640 271.343 341.796  c
270.864 342.036 270.364 342.156 269.843 342.156  c
269.333 342.156 268.960 342.067 268.726 341.890  c
268.492 341.713 268.375 341.520 268.375 341.312  c
268.375 341.187 268.424 341.080 268.523 340.992  c
268.622 340.903 268.744 340.859 268.890 340.859  c
268.994 340.859 269.088 340.875 269.171 340.906  c
269.255 340.937 269.395 341.026 269.593 341.171  c
269.916 341.390 270.239 341.500 270.562 341.500  c
271.062 341.500 271.497 341.312 271.867 340.937  c
272.237 340.562 272.421 340.104 272.421 339.562  c
272.421 339.041 272.255 338.557 271.921 338.109  c
271.588 337.661 271.130 337.312 270.546 337.062  c
270.078 336.875 269.447 336.765 268.656 336.734  c
270.312 333.390 l
273.390 333.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
327.215 319.252 m
327.215 323.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
334.953 340.343 m
334.359 342.000 l
329.281 342.000 l
329.281 341.765 l
330.770 340.401 331.820 339.286 332.429 338.421  c
333.039 337.557 333.343 336.770 333.343 336.062  c
333.343 335.510 333.177 335.059 332.843 334.710  c
332.510 334.362 332.109 334.187 331.640 334.187  c
331.224 334.187 330.846 334.309 330.507 334.554  c
330.169 334.799 329.921 335.161 329.765 335.640  c
329.531 335.640 l
329.635 334.859 329.906 334.260 330.343 333.843  c
330.781 333.427 331.328 333.218 331.984 333.218  c
332.682 333.218 333.265 333.442 333.734 333.890  c
334.203 334.338 334.437 334.864 334.437 335.468  c
334.437 335.906 334.333 336.343 334.125 336.781  c
333.812 337.468 333.307 338.192 332.609 338.953  c
331.557 340.109 330.895 340.807 330.625 341.046  c
332.875 341.046 l
333.333 341.046 333.653 341.028 333.835 340.992  c
334.018 340.955 334.184 340.885 334.335 340.781  c
334.487 340.677 334.614 340.531 334.718 340.343  c
334.953 340.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
62.7687 381.500 m
62.7687 8.01577 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
29 156 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
62.7687 381.500 m
58.7687 381.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
46 380 6 13 rc
newpath
56.7968 387.437 m
48.2031 387.437 l
48.2031 386.765 l
56.7968 386.765 l
56.7968 387.437 l
h
f
Q
newpath
55.5312 383.234 m
57.6250 382.218 l
57.8281 382.218 l
57.8281 389.484 l
57.8281 389.963 57.8489 390.263 57.8906 390.382  c
57.9322 390.502 58.0156 390.593 58.1406 390.656  c
58.2656 390.718 58.5208 390.755 58.9062 390.765  c
58.9062 391.000 l
55.6718 391.000 l
55.6718 390.765 l
56.0781 390.755 56.3411 390.718 56.4609 390.656  c
56.5807 390.593 56.6640 390.510 56.7109 390.406  c
56.7578 390.302 56.7812 389.994 56.7812 389.484  c
56.7812 384.843 l
56.7812 384.208 56.7604 383.802 56.7187 383.625  c
56.6875 383.489 56.6328 383.390 56.5546 383.328  c
56.4765 383.265 56.3802 383.234 56.2656 383.234  c
56.1093 383.234 55.8958 383.302 55.6250 383.437  c
55.5312 383.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
62.7687 319.252 m
58.7687 319.252 l
S
Q
q
0 w
newpath
62.7687 257.005 m
58.7687 257.005 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
55.5312 259.234 m
57.6250 258.218 l
57.8281 258.218 l
57.8281 265.484 l
57.8281 265.963 57.8489 266.263 57.8906 266.382  c
57.9322 266.502 58.0156 266.593 58.1406 266.656  c
58.2656 266.718 58.5208 266.755 58.9062 266.765  c
58.9062 267.000 l
55.6718 267.000 l
55.6718 266.765 l
56.0781 266.755 56.3411 266.718 56.4609 266.656  c
56.5807 266.593 56.6640 266.510 56.7109 266.406  c
56.7578 266.302 56.7812 265.994 56.7812 265.484  c
56.7812 260.843 l
56.7812 260.208 56.7604 259.802 56.7187 259.625  c
56.6875 259.489 56.6328 259.390 56.5546 259.328  c
56.4765 259.265 56.3802 259.234 56.2656 259.234  c
56.1093 259.234 55.8958 259.302 55.6250 259.437  c
55.5312 259.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
62.7687 194.757 m
58.7687 194.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
59.9531 202.343 m
59.3593 204.000 l
54.2812 204.000 l
54.2812 203.765 l
55.7708 202.401 56.8203 201.286 57.4296 200.421  c
58.0390 199.557 58.3437 198.770 58.3437 198.062  c
58.3437 197.510 58.1770 197.059 57.8437 196.710  c
57.5104 196.362 57.1093 196.187 56.6406 196.187  c
56.2239 196.187 55.8463 196.309 55.5078 196.554  c
55.1692 196.799 54.9218 197.161 54.7656 197.640  c
54.5312 197.640 l
54.6354 196.859 54.9062 196.260 55.3437 195.843  c
55.7812 195.427 56.3281 195.218 56.9843 195.218  c
57.6822 195.218 58.2656 195.442 58.7343 195.890  c
59.2031 196.338 59.4375 196.864 59.4375 197.468  c
59.4375 197.906 59.3333 198.343 59.1250 198.781  c
58.8125 199.468 58.3072 200.192 57.6093 200.953  c
56.5572 202.109 55.8958 202.807 55.6250 203.046  c
57.8750 203.046 l
58.3333 203.046 58.6536 203.028 58.8359 202.992  c
59.0182 202.955 59.1849 202.885 59.3359 202.781  c
59.4869 202.677 59.6145 202.531 59.7187 202.343  c
59.9531 202.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
62.7687 132.510 m
58.7687 132.510 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
54.6562 135.031 m
54.9062 134.447 55.2187 134.000 55.5937 133.687  c
55.9687 133.375 56.4322 133.218 56.9843 133.218  c
57.6822 133.218 58.2135 133.442 58.5781 133.890  c
58.8593 134.224 59.0000 134.578 59.0000 134.953  c
59.0000 135.588 58.6041 136.239 57.8125 136.906  c
58.3437 137.114 58.7447 137.411 59.0156 137.796  c
59.2864 138.182 59.4218 138.635 59.4218 139.156  c
59.4218 139.895 59.1822 140.536 58.7031 141.078  c
58.0885 141.796 57.1979 142.156 56.0312 142.156  c
55.4479 142.156 55.0520 142.083 54.8437 141.937  c
54.6354 141.791 54.5312 141.635 54.5312 141.468  c
54.5312 141.343 54.5807 141.237 54.6796 141.148  c
54.7786 141.059 54.8958 141.015 55.0312 141.015  c
55.1354 141.015 55.2447 141.031 55.3593 141.062  c
55.4322 141.083 55.5963 141.158 55.8515 141.289  c
56.1067 141.419 56.2812 141.500 56.3750 141.531  c
56.5312 141.572 56.6979 141.593 56.8750 141.593  c
57.3020 141.593 57.6770 141.427 58.0000 141.093  c
58.3229 140.760 58.4843 140.364 58.4843 139.906  c
58.4843 139.572 58.4114 139.250 58.2656 138.937  c
58.1510 138.697 58.0260 138.515 57.8906 138.390  c
57.7135 138.224 57.4661 138.072 57.1484 137.937  c
56.8307 137.802 56.5052 137.734 56.1718 137.734  c
55.9687 137.734 l
55.9687 137.531 l
56.3020 137.489 56.6380 137.369 56.9765 137.171  c
57.3151 136.974 57.5599 136.737 57.7109 136.460  c
57.8619 136.184 57.9375 135.875 57.9375 135.531  c
57.9375 135.104 57.8020 134.755 57.5312 134.484  c
57.2604 134.213 56.9218 134.078 56.5156 134.078  c
55.8593 134.078 55.3125 134.427 54.8750 135.125  c
54.6562 135.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
62.7687 70.2631 m
58.7687 70.2631 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
60.0468 76.8281 m
60.0468 77.7343 l
58.8906 77.7343 l
58.8906 80.0000 l
57.8437 80.0000 l
57.8437 77.7343 l
54.2031 77.7343 l
54.2031 76.9218 l
58.2031 71.2187 l
58.8906 71.2187 l
58.8906 76.8281 l
60.0468 76.8281 l
h
57.8437 76.8281 m
57.8437 72.5468 l
54.8281 76.8281 l
57.8437 76.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
62.7687 8.01577 m
58.7687 8.01577 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
59.6406 9.39062 m
59.1406 10.4687 l
56.5625 10.4687 l
56.0000 11.6250 l
57.1145 11.7916 58.0000 12.2083 58.6562 12.8750  c
59.2187 13.4479 59.5000 14.1250 59.5000 14.9062  c
59.5000 15.3645 59.4088 15.7864 59.2265 16.1718  c
59.0442 16.5572 58.8125 16.8854 58.5312 17.1562  c
58.2500 17.4270 57.9375 17.6406 57.5937 17.7968  c
57.1145 18.0364 56.6145 18.1562 56.0937 18.1562  c
55.5833 18.1562 55.2109 18.0677 54.9765 17.8906  c
54.7421 17.7135 54.6250 17.5208 54.6250 17.3125  c
54.6250 17.1875 54.6744 17.0807 54.7734 16.9921  c
54.8724 16.9036 54.9947 16.8593 55.1406 16.8593  c
55.2447 16.8593 55.3385 16.8750 55.4218 16.9062  c
55.5052 16.9375 55.6458 17.0260 55.8437 17.1718  c
56.1666 17.3906 56.4895 17.5000 56.8125 17.5000  c
57.3125 17.5000 57.7474 17.3125 58.1171 16.9375  c
58.4869 16.5625 58.6718 16.1041 58.6718 15.5625  c
58.6718 15.0416 58.5052 14.5572 58.1718 14.1093  c
57.8385 13.6614 57.3802 13.3125 56.7968 13.0625  c
56.3281 12.8750 55.6979 12.7656 54.9062 12.7343  c
56.5625 9.39062 l
59.6406 9.39062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
