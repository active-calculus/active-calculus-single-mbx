%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, October 29, 2014 8:07:32 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.752941 0.752941 0.752941 RG
newpath
2.00000 388.000 m
2.00000 1.00000 l
S
newpath
34.2500 388.000 m
34.2500 1.00000 l
S
newpath
66.5000 388.000 m
66.5000 1.00000 l
S
newpath
98.7500 388.000 m
98.7500 1.00000 l
S
newpath
131.000 388.000 m
131.000 1.00000 l
S
newpath
163.250 388.000 m
163.250 1.00000 l
S
newpath
195.500 388.000 m
195.500 1.00000 l
S
newpath
227.750 388.000 m
227.750 1.00000 l
S
newpath
260.000 388.000 m
260.000 1.00000 l
S
newpath
292.250 388.000 m
292.250 1.00000 l
S
newpath
324.500 388.000 m
324.500 1.00000 l
S
newpath
356.750 388.000 m
356.750 1.00000 l
S
newpath
389.000 388.000 m
389.000 1.00000 l
S
Q
2 J
0 j
0 J
1 j
q
0.752941 0.752941 0.752941 RG
newpath
2.00000 388.000 m
389.000 388.000 l
S
newpath
2.00000 355.750 m
389.000 355.750 l
S
newpath
2.00000 323.500 m
389.000 323.500 l
S
newpath
2.00000 291.250 m
389.000 291.250 l
S
newpath
2.00000 259.000 m
389.000 259.000 l
S
newpath
2.00000 226.750 m
389.000 226.750 l
S
newpath
2.00000 194.500 m
389.000 194.500 l
S
newpath
2.00000 162.250 m
389.000 162.250 l
S
newpath
2.00000 130.000 m
389.000 130.000 l
S
newpath
2.00000 97.7500 m
389.000 97.7500 l
S
newpath
2.00000 65.5000 m
389.000 65.5000 l
S
newpath
2.00000 33.2500 m
389.000 33.2500 l
S
newpath
2.00000 1.00000 m
389.000 1.00000 l
S
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
1.00000 0.752941 0.796078 RG
1.00000 -1.00000 390.000 390.000 rc
newpath
272.900 323.500 m
324.500 323.500 l
324.500 163.764 l
272.900 163.764 l
272.900 323.500 l
272.900 323.500 l
272.900 323.500 l
272.900 323.500 l
h
f
0 0 0 RG
newpath
272.900 323.500 m
324.500 323.500 l
324.500 163.764 l
272.900 163.764 l
272.900 323.500 l
272.900 323.500 l
272.900 323.500 l
272.900 323.500 l
h
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 0.752941 0.796078 RG
1.00000 -1.00000 390.000 390.000 rc
newpath
221.300 323.500 m
272.900 323.500 l
272.900 216.426 l
221.300 216.426 l
221.300 323.500 l
221.300 323.500 l
221.300 323.500 l
221.300 323.500 l
h
f
0 0 0 RG
newpath
221.300 323.500 m
272.900 323.500 l
272.900 216.426 l
221.300 216.426 l
221.300 323.500 l
221.300 323.500 l
221.300 323.500 l
221.300 323.500 l
h
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 0.752941 0.796078 RG
1.00000 -1.00000 390.000 390.000 rc
newpath
169.700 323.500 m
221.300 323.500 l
221.300 251.726 l
169.700 251.726 l
169.700 323.500 l
169.700 323.500 l
169.700 323.500 l
169.700 323.500 l
h
f
0 0 0 RG
newpath
169.700 323.500 m
221.300 323.500 l
221.300 251.726 l
169.700 251.726 l
169.700 323.500 l
169.700 323.500 l
169.700 323.500 l
169.700 323.500 l
h
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 0.752941 0.796078 RG
1.00000 -1.00000 390.000 390.000 rc
newpath
118.100 323.500 m
169.700 323.500 l
169.700 275.388 l
118.100 275.388 l
118.100 323.500 l
118.100 323.500 l
118.100 323.500 l
118.100 323.500 l
h
f
0 0 0 RG
newpath
118.100 323.500 m
169.700 323.500 l
169.700 275.388 l
118.100 275.388 l
118.100 323.500 l
118.100 323.500 l
118.100 323.500 l
118.100 323.500 l
h
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 0.752941 0.796078 RG
1.00000 -1.00000 390.000 390.000 rc
newpath
66.5000 323.500 m
118.100 323.500 l
118.100 291.250 l
66.5000 291.250 l
66.5000 323.500 l
66.5000 323.500 l
66.5000 323.500 l
66.5000 323.500 l
h
f
0 0 0 RG
newpath
66.5000 323.500 m
118.100 323.500 l
118.100 291.250 l
66.5000 291.250 l
66.5000 323.500 l
66.5000 323.500 l
66.5000 323.500 l
66.5000 323.500 l
h
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0.752941 0.752941 0.752941 RG
1.00000 -1.00000 390.000 390.000 rc
newpath
2.00000 388.000 m
389.000 388.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 -1.00000 390.000 390.000 rc
newpath
2.00000 323.500 m
389.000 323.500 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
2.00000 w
0 0 1.00000 RG
0 -2.00000 392.000 392.000 rc
newpath
66.5000 291.250 m
67.8564 290.909 l
69.0367 290.609 l
70.3640 290.269 l
71.7001 289.923 l
73.0299 289.575 l
74.2627 289.249 l
75.5393 288.909 l
76.8595 288.553 l
78.1755 288.194 l
79.5291 287.822 l
80.7214 287.491 l
82.0637 287.114 l
83.4114 286.732 l
84.7102 286.360 l
85.8897 286.019 l
87.2921 285.609 l
88.4802 285.259 l
89.8622 284.847 l
91.0855 284.478 l
92.4277 284.070 l
93.7058 283.678 l
95.0393 283.264 l
96.2639 282.880 l
97.5848 282.462 l
98.9569 282.023 l
100.151 281.637 l
101.441 281.217 l
102.773 280.778 l
104.077 280.344 l
105.339 279.920 l
106.739 279.444 l
107.998 279.012 l
109.341 278.546 l
110.559 278.120 l
111.890 277.649 l
113.143 277.202 l
114.452 276.730 l
115.732 276.263 l
117.072 275.770 l
118.363 275.290 l
119.682 274.794 l
120.991 274.297 l
122.194 273.837 l
123.573 273.303 l
124.806 272.821 l
126.120 272.302 l
127.379 271.800 l
128.776 271.237 l
129.985 270.745 l
131.359 270.180 l
132.610 269.660 l
133.979 269.086 l
135.160 268.585 l
136.505 268.010 l
137.805 267.448 l
139.103 266.881 l
140.397 266.310 l
141.640 265.757 l
142.983 265.152 l
144.264 264.570 l
145.612 263.951 l
146.832 263.385 l
148.180 262.754 l
149.471 262.142 l
150.760 261.527 l
152.105 260.877 l
153.345 260.272 l
154.614 259.647 l
156.016 258.950 l
157.284 258.311 l
158.582 257.652 l
159.902 256.975 l
161.115 256.347 l
162.408 255.670 l
163.691 254.992 l
165.064 254.259 l
166.275 253.606 l
167.673 252.845 l
168.934 252.150 l
170.182 251.457 l
171.524 250.703 l
172.872 249.939 l
174.098 249.237 l
175.399 248.483 l
176.670 247.741 l
178.047 246.928 l
179.239 246.217 l
180.608 245.393 l
181.894 244.610 l
183.168 243.827 l
184.444 243.035 l
185.744 242.220 l
187.123 241.347 l
188.387 240.538 l
189.635 239.731 l
190.969 238.860 l
192.300 237.983 l
193.495 237.187 l
194.910 236.235 l
196.094 235.430 l
197.479 234.479 l
198.801 233.563 l
199.981 232.736 l
201.308 231.797 l
202.644 230.843 l
203.974 229.882 l
205.207 228.983 l
206.484 228.044 l
207.804 227.062 l
209.120 226.073 l
210.473 225.045 l
211.666 224.131 l
213.008 223.092 l
214.356 222.037 l
215.655 221.010 l
216.834 220.069 l
218.236 218.938 l
219.425 217.971 l
220.807 216.834 l
222.030 215.818 l
223.372 214.692 l
224.650 213.608 l
225.984 212.466 l
227.208 211.407 l
228.529 210.254 l
229.901 209.043 l
231.096 207.978 l
232.385 206.817 l
233.718 205.606 l
235.022 204.408 l
236.283 203.238 l
237.684 201.925 l
238.942 200.733 l
240.286 199.448 l
241.504 198.271 l
242.835 196.972 l
244.087 195.738 l
245.397 194.434 l
246.677 193.147 l
248.017 191.786 l
249.307 190.462 l
250.627 189.094 l
251.936 187.723 l
253.139 186.451 l
254.517 184.979 l
255.750 183.648 l
257.065 182.216 l
258.323 180.831 l
259.720 179.278 l
260.930 177.919 l
262.303 176.361 l
263.555 174.926 l
264.924 173.341 l
266.105 171.960 l
267.450 170.372 l
268.749 168.821 l
270.048 167.257 l
271.342 165.682 l
272.585 164.154 l
273.928 162.486 l
275.209 160.879 l
276.556 159.171 l
277.776 157.610 l
279.125 155.867 l
280.416 154.180 l
281.704 152.481 l
283.050 150.688 l
284.289 149.019 l
285.559 147.294 l
286.960 145.369 l
288.229 143.608 l
289.527 141.790 l
290.847 139.921 l
292.060 138.187 l
293.353 136.320 l
294.636 134.448 l
296.009 132.426 l
297.220 130.623 l
298.618 128.522 l
299.879 126.606 l
301.127 124.692 l
302.469 122.613 l
303.816 120.504 l
305.042 118.566 l
306.344 116.487 l
307.615 114.438 l
308.992 112.194 l
310.184 110.233 l
311.552 107.958 l
312.839 105.798 l
314.113 103.637 l
315.388 101.453 l
316.689 99.2029 l
318.068 96.7928 l
319.332 94.5603 l
320.580 92.3350 l
321.914 89.9322 l
323.245 87.5098 l
324.500 85.2029 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
79 35 80 21 rc
newpath
85.9062 41.2968 m
85.9062 43.9531 l
87.7812 43.9531 l
87.7812 44.5625 l
85.9062 44.5625 l
85.9062 49.7812 l
85.9062 50.3020 85.9791 50.6536 86.1250 50.8359  c
86.2708 51.0182 86.4635 51.1093 86.7031 51.1093  c
86.8906 51.1093 87.0755 51.0494 87.2578 50.9296  c
87.4401 50.8099 87.5833 50.6354 87.6875 50.4062  c
88.0312 50.4062 l
87.8229 50.9791 87.5312 51.4088 87.1562 51.6953  c
86.7812 51.9817 86.3958 52.1250 86.0000 52.1250  c
85.7291 52.1250 85.4635 52.0520 85.2031 51.9062  c
84.9427 51.7604 84.7526 51.5468 84.6328 51.2656  c
84.5130 50.9843 84.4531 50.5572 84.4531 49.9843  c
84.4531 44.5625 l
83.1718 44.5625 l
83.1718 44.2812 l
83.4947 44.1458 83.8255 43.9244 84.1640 43.6171  c
84.5026 43.3099 84.8020 42.9479 85.0625 42.5312  c
85.1979 42.3020 85.3854 41.8906 85.6250 41.2968  c
85.9062 41.2968 l
h
92.5009 43.7187 m
93.7197 43.7187 94.6988 44.1770 95.4384 45.0937  c
96.0634 45.8854 96.3759 46.7968 96.3759 47.8281  c
96.3759 48.5468 96.2041 49.2760 95.8603 50.0156  c
95.5166 50.7552 95.0400 51.3125 94.4306 51.6875  c
93.8212 52.0625 93.1468 52.2500 92.4072 52.2500  c
91.1884 52.2500 90.2249 51.7656 89.5166 50.7968  c
88.9124 49.9843 88.6103 49.0677 88.6103 48.0468  c
88.6103 47.3177 88.7926 46.5859 89.1572 45.8515  c
89.5218 45.1171 90.0035 44.5781 90.6025 44.2343  c
91.2015 43.8906 91.8343 43.7187 92.5009 43.7187  c
h
92.2353 44.2812 m
91.9228 44.2812 91.6103 44.3750 91.2978 44.5625  c
90.9853 44.7500 90.7301 45.0729 90.5322 45.5312  c
90.3343 45.9895 90.2353 46.5833 90.2353 47.3125  c
90.2353 48.4895 90.4697 49.5026 90.9384 50.3515  c
91.4072 51.2005 92.0218 51.6250 92.7822 51.6250  c
93.3551 51.6250 93.8238 51.3906 94.1884 50.9218  c
94.5530 50.4531 94.7353 49.6458 94.7353 48.5000  c
94.7353 47.0729 94.4280 45.9479 93.8134 45.1250  c
93.3968 44.5625 92.8707 44.2812 92.2353 44.2812  c
h
99.9072 45.4218 m
100.855 44.2864 101.756 43.7187 102.610 43.7187  c
103.047 43.7187 103.425 43.8281 103.743 44.0468  c
104.060 44.2656 104.313 44.6250 104.501 45.1250  c
104.626 45.4791 104.688 46.0208 104.688 46.7500  c
104.688 50.1875 l
104.688 50.6875 104.730 51.0312 104.813 51.2187  c
104.876 51.3645 104.980 51.4791 105.126 51.5625  c
105.271 51.6458 105.537 51.6875 105.922 51.6875  c
105.922 52.0000 l
101.938 52.0000 l
101.938 51.6875 l
102.110 51.6875 l
102.485 51.6875 102.748 51.6302 102.899 51.5156  c
103.050 51.4010 103.152 51.2291 103.204 51.0000  c
103.224 50.9166 103.235 50.6458 103.235 50.1875  c
103.235 46.8906 l
103.235 46.1510 103.141 45.6171 102.954 45.2890  c
102.766 44.9609 102.448 44.7968 102.001 44.7968  c
101.303 44.7968 100.605 45.1770 99.9072 45.9375  c
99.9072 50.1875 l
99.9072 50.7291 99.9384 51.0625 100.001 51.1875  c
100.084 51.3645 100.198 51.4921 100.344 51.5703  c
100.490 51.6484 100.782 51.6875 101.219 51.6875  c
101.219 52.0000 l
97.2353 52.0000 l
97.2353 51.6875 l
97.4072 51.6875 l
97.8238 51.6875 98.1025 51.5833 98.2431 51.3750  c
98.3837 51.1666 98.4541 50.7708 98.4541 50.1875  c
98.4541 47.1875 l
98.4541 46.2187 98.4332 45.6302 98.3916 45.4218  c
98.3499 45.2135 98.2848 45.0703 98.1962 44.9921  c
98.1077 44.9140 97.9853 44.8750 97.8291 44.8750  c
97.6624 44.8750 97.4645 44.9218 97.2353 45.0156  c
97.1103 44.7031 l
99.5322 43.7187 l
99.9072 43.7187 l
99.9072 45.4218 l
h
111.766 43.7187 m
111.766 46.4531 l
111.469 46.4531 l
111.251 45.5885 110.967 45.0026 110.618 44.6953  c
110.269 44.3880 109.823 44.2343 109.282 44.2343  c
108.876 44.2343 108.547 44.3411 108.297 44.5546  c
108.047 44.7682 107.922 45.0104 107.922 45.2812  c
107.922 45.6041 108.016 45.8854 108.204 46.1250  c
108.381 46.3645 108.751 46.6197 109.313 46.8906  c
110.594 47.5156 l
111.782 48.0885 112.376 48.8489 112.376 49.7968  c
112.376 50.5364 112.099 51.1302 111.547 51.5781  c
110.995 52.0260 110.376 52.2500 109.688 52.2500  c
109.188 52.2500 108.626 52.1614 108.001 51.9843  c
107.803 51.9218 107.641 51.8906 107.516 51.8906  c
107.381 51.8906 107.277 51.9687 107.204 52.1250  c
106.922 52.1250 l
106.922 49.2500 l
107.204 49.2500 l
107.370 50.0729 107.685 50.6927 108.149 51.1093  c
108.613 51.5260 109.131 51.7343 109.704 51.7343  c
110.110 51.7343 110.441 51.6145 110.696 51.3750  c
110.951 51.1354 111.079 50.8489 111.079 50.5156  c
111.079 50.1093 110.935 49.7682 110.649 49.4921  c
110.363 49.2161 109.795 48.8671 108.946 48.4453  c
108.097 48.0234 107.542 47.6458 107.282 47.3125  c
107.011 46.9791 106.876 46.5572 106.876 46.0468  c
106.876 45.3802 107.102 44.8255 107.555 44.3828  c
108.008 43.9401 108.599 43.7187 109.329 43.7187  c
109.641 43.7187 110.021 43.7812 110.469 43.9062  c
110.771 44.0000 110.974 44.0468 111.079 44.0468  c
111.172 44.0468 111.245 44.0260 111.297 43.9843  c
111.349 43.9427 111.407 43.8541 111.469 43.7187  c
111.766 43.7187 l
h
118.052 39.5000 m
113.740 52.2500 l
113.037 52.2500 l
117.349 39.5000 l
118.052 39.5000 l
h
118.116 43.9531 m
121.491 43.9531 l
121.491 44.2812 l
121.189 44.3020 120.988 44.3567 120.889 44.4453  c
120.790 44.5338 120.741 44.6562 120.741 44.8125  c
120.741 45.0000 120.793 45.2239 120.897 45.4843  c
122.616 50.1093 l
124.350 46.3437 l
123.881 45.1562 l
123.746 44.8020 123.564 44.5572 123.335 44.4218  c
123.210 44.3385 122.970 44.2916 122.616 44.2812  c
122.616 43.9531 l
126.444 43.9531 l
126.444 44.2812 l
126.027 44.2916 125.730 44.3645 125.553 44.5000  c
125.428 44.5937 125.366 44.7447 125.366 44.9531  c
125.366 45.0677 125.392 45.1875 125.444 45.3125  c
127.272 49.9375 l
128.960 45.4843 l
129.085 45.1614 129.147 44.9062 129.147 44.7187  c
129.147 44.6145 129.090 44.5182 128.975 44.4296  c
128.861 44.3411 128.637 44.2916 128.303 44.2812  c
128.303 43.9531 l
130.835 43.9531 l
130.835 44.2812 l
130.324 44.3541 129.949 44.6979 129.710 45.3125  c
127.022 52.2500 l
126.663 52.2500 l
124.647 47.1093 l
122.303 52.2500 l
121.975 52.2500 l
119.397 45.4843 l
119.230 45.0572 119.064 44.7682 118.897 44.6171  c
118.730 44.4661 118.470 44.3541 118.116 44.2812  c
118.116 43.9531 l
h
132.927 46.9843 m
132.917 48.1822 133.203 49.1197 133.787 49.7968  c
134.380 50.4739 135.073 50.8125 135.865 50.8125  c
136.386 50.8125 136.841 50.6666 137.232 50.3750  c
137.623 50.0833 137.948 49.5885 138.209 48.8906  c
138.490 49.0625 l
138.365 49.8645 138.005 50.5963 137.412 51.2578  c
136.818 51.9192 136.078 52.2500 135.193 52.2500  c
134.224 52.2500 133.396 51.8724 132.709 51.1171  c
132.021 50.3619 131.677 49.3489 131.677 48.0781  c
131.677 46.7031 132.029 45.6302 132.732 44.8593  c
133.435 44.0885 134.323 43.7031 135.396 43.7031  c
136.292 43.7031 137.031 44.0000 137.615 44.5937  c
138.198 45.1875 138.490 45.9843 138.490 46.9843  c
132.927 46.9843 l
h
132.927 46.4687 m
136.646 46.4687 l
136.615 45.9583 136.552 45.5937 136.459 45.3750  c
136.313 45.0520 136.097 44.7968 135.810 44.6093  c
135.524 44.4218 135.219 44.3281 134.896 44.3281  c
134.417 44.3281 133.985 44.5156 133.599 44.8906  c
133.214 45.2656 132.990 45.7916 132.927 46.4687  c
h
140.917 46.9843 m
140.906 48.1822 141.193 49.1197 141.776 49.7968  c
142.370 50.4739 143.062 50.8125 143.854 50.8125  c
144.375 50.8125 144.831 50.6666 145.221 50.3750  c
145.612 50.0833 145.937 49.5885 146.198 48.8906  c
146.479 49.0625 l
146.354 49.8645 145.995 50.5963 145.401 51.2578  c
144.807 51.9192 144.068 52.2500 143.182 52.2500  c
142.213 52.2500 141.385 51.8724 140.698 51.1171  c
140.010 50.3619 139.667 49.3489 139.667 48.0781  c
139.667 46.7031 140.018 45.6302 140.721 44.8593  c
141.424 44.0885 142.312 43.7031 143.385 43.7031  c
144.281 43.7031 145.021 44.0000 145.604 44.5937  c
146.187 45.1875 146.479 45.9843 146.479 46.9843  c
140.917 46.9843 l
h
140.917 46.4687 m
144.635 46.4687 l
144.604 45.9583 144.542 45.5937 144.448 45.3750  c
144.302 45.0520 144.086 44.7968 143.799 44.6093  c
143.513 44.4218 143.208 44.3281 142.885 44.3281  c
142.406 44.3281 141.974 44.5156 141.588 44.8906  c
141.203 45.2656 140.979 45.7916 140.917 46.4687  c
h
149.921 39.5000 m
149.921 47.5156 l
151.984 45.6406 l
152.411 45.2447 152.661 44.9947 152.734 44.8906  c
152.776 44.8177 152.796 44.7447 152.796 44.6718  c
152.796 44.5572 152.750 44.4583 152.656 44.3750  c
152.562 44.2916 152.401 44.2447 152.171 44.2343  c
152.171 43.9531 l
155.671 43.9531 l
155.671 44.2343 l
155.192 44.2447 154.794 44.3177 154.476 44.4531  c
154.158 44.5885 153.807 44.8281 153.421 45.1718  c
151.359 47.0781 l
153.421 49.6875 l
153.994 50.4062 154.385 50.8645 154.593 51.0625  c
154.875 51.3333 155.119 51.5104 155.328 51.5937  c
155.474 51.6562 155.729 51.6875 156.093 51.6875  c
156.093 52.0000 l
152.171 52.0000 l
152.171 51.6875 l
152.401 51.6770 152.554 51.6406 152.632 51.5781  c
152.710 51.5156 152.750 51.4322 152.750 51.3281  c
152.750 51.1927 152.635 50.9739 152.406 50.6718  c
149.921 47.5156 l
149.921 50.1875 l
149.921 50.7083 149.960 51.0520 150.039 51.2187  c
150.117 51.3854 150.221 51.5026 150.351 51.5703  c
150.481 51.6380 150.776 51.6770 151.234 51.6875  c
151.234 52.0000 l
147.140 52.0000 l
147.140 51.6875 l
147.546 51.6875 147.854 51.6354 148.062 51.5312  c
148.177 51.4687 148.270 51.3697 148.343 51.2343  c
148.427 51.0364 148.468 50.7031 148.468 50.2343  c
148.468 42.9062 l
148.468 41.9687 148.447 41.3958 148.406 41.1875  c
148.364 40.9791 148.296 40.8359 148.203 40.7578  c
148.109 40.6796 147.989 40.6406 147.843 40.6406  c
147.718 40.6406 147.531 40.6927 147.281 40.7968  c
147.140 40.4843 l
149.531 39.5000 l
149.921 39.5000 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
324 289 52 21 rc
newpath
328.109 297.953 m
331.484 297.953 l
331.484 298.281 l
331.182 298.302 330.981 298.356 330.882 298.445  c
330.783 298.533 330.734 298.656 330.734 298.812  c
330.734 299.000 330.786 299.224 330.890 299.484  c
332.609 304.109 l
334.343 300.343 l
333.875 299.156 l
333.739 298.802 333.557 298.557 333.328 298.421  c
333.203 298.338 332.963 298.291 332.609 298.281  c
332.609 297.953 l
336.437 297.953 l
336.437 298.281 l
336.020 298.291 335.724 298.364 335.546 298.500  c
335.421 298.593 335.359 298.744 335.359 298.953  c
335.359 299.067 335.385 299.187 335.437 299.312  c
337.265 303.937 l
338.953 299.484 l
339.078 299.161 339.140 298.906 339.140 298.718  c
339.140 298.614 339.083 298.518 338.968 298.429  c
338.854 298.341 338.630 298.291 338.296 298.281  c
338.296 297.953 l
340.828 297.953 l
340.828 298.281 l
340.317 298.354 339.942 298.697 339.703 299.312  c
337.015 306.250 l
336.656 306.250 l
334.640 301.109 l
332.296 306.250 l
331.968 306.250 l
329.390 299.484 l
329.224 299.057 329.057 298.768 328.890 298.617  c
328.724 298.466 328.463 298.354 328.109 298.281  c
328.109 297.953 l
h
342.920 300.984 m
342.910 302.182 343.196 303.119 343.780 303.796  c
344.374 304.474 345.066 304.812 345.858 304.812  c
346.379 304.812 346.835 304.666 347.225 304.375  c
347.616 304.083 347.941 303.588 348.202 302.890  c
348.483 303.062 l
348.358 303.864 347.999 304.596 347.405 305.257  c
346.811 305.919 346.071 306.250 345.186 306.250  c
344.217 306.250 343.389 305.872 342.702 305.117  c
342.014 304.362 341.670 303.349 341.670 302.078  c
341.670 300.703 342.022 299.630 342.725 298.859  c
343.428 298.088 344.316 297.703 345.389 297.703  c
346.285 297.703 347.025 298.000 347.608 298.593  c
348.191 299.187 348.483 299.984 348.483 300.984  c
342.920 300.984 l
h
342.920 300.468 m
346.639 300.468 l
346.608 299.958 346.545 299.593 346.452 299.375  c
346.306 299.052 346.090 298.796 345.803 298.609  c
345.517 298.421 345.212 298.328 344.889 298.328  c
344.410 298.328 343.978 298.515 343.592 298.890  c
343.207 299.265 342.983 299.791 342.920 300.468  c
h
350.910 300.984 m
350.899 302.182 351.186 303.119 351.769 303.796  c
352.363 304.474 353.056 304.812 353.847 304.812  c
354.368 304.812 354.824 304.666 355.214 304.375  c
355.605 304.083 355.931 303.588 356.191 302.890  c
356.472 303.062 l
356.347 303.864 355.988 304.596 355.394 305.257  c
354.800 305.919 354.061 306.250 353.175 306.250  c
352.207 306.250 351.378 305.872 350.691 305.117  c
350.003 304.362 349.660 303.349 349.660 302.078  c
349.660 300.703 350.011 299.630 350.714 298.859  c
351.418 298.088 352.306 297.703 353.378 297.703  c
354.274 297.703 355.014 298.000 355.597 298.593  c
356.181 299.187 356.472 299.984 356.472 300.984  c
350.910 300.984 l
h
350.910 300.468 m
354.628 300.468 l
354.597 299.958 354.535 299.593 354.441 299.375  c
354.295 299.052 354.079 298.796 353.793 298.609  c
353.506 298.421 353.201 298.328 352.878 298.328  c
352.399 298.328 351.967 298.515 351.582 298.890  c
351.196 299.265 350.972 299.791 350.910 300.468  c
h
359.915 293.500 m
359.915 301.515 l
361.977 299.640 l
362.404 299.244 362.654 298.994 362.727 298.890  c
362.769 298.817 362.790 298.744 362.790 298.671  c
362.790 298.557 362.743 298.458 362.649 298.375  c
362.555 298.291 362.394 298.244 362.165 298.234  c
362.165 297.953 l
365.665 297.953 l
365.665 298.234 l
365.185 298.244 364.787 298.317 364.469 298.453  c
364.152 298.588 363.800 298.828 363.415 299.171  c
361.352 301.078 l
363.415 303.687 l
363.988 304.406 364.378 304.864 364.586 305.062  c
364.868 305.333 365.113 305.510 365.321 305.593  c
365.467 305.656 365.722 305.687 366.086 305.687  c
366.086 306.000 l
362.165 306.000 l
362.165 305.687 l
362.394 305.677 362.547 305.640 362.626 305.578  c
362.704 305.515 362.743 305.432 362.743 305.328  c
362.743 305.192 362.628 304.974 362.399 304.671  c
359.915 301.515 l
359.915 304.187 l
359.915 304.708 359.954 305.052 360.032 305.218  c
360.110 305.385 360.214 305.502 360.344 305.570  c
360.474 305.638 360.769 305.677 361.227 305.687  c
361.227 306.000 l
357.133 306.000 l
357.133 305.687 l
357.540 305.687 357.847 305.635 358.055 305.531  c
358.170 305.468 358.264 305.369 358.336 305.234  c
358.420 305.036 358.461 304.703 358.461 304.234  c
358.461 296.906 l
358.461 295.968 358.441 295.395 358.399 295.187  c
358.357 294.979 358.290 294.835 358.196 294.757  c
358.102 294.679 357.982 294.640 357.836 294.640  c
357.711 294.640 357.524 294.692 357.274 294.796  c
357.133 294.484 l
359.524 293.500 l
359.915 293.500 l
h
371.743 297.718 m
371.743 300.453 l
371.446 300.453 l
371.227 299.588 370.943 299.002 370.594 298.695  c
370.245 298.388 369.800 298.234 369.258 298.234  c
368.852 298.234 368.524 298.341 368.274 298.554  c
368.024 298.768 367.899 299.010 367.899 299.281  c
367.899 299.604 367.993 299.885 368.180 300.125  c
368.357 300.364 368.727 300.619 369.290 300.890  c
370.571 301.515 l
371.758 302.088 372.352 302.849 372.352 303.796  c
372.352 304.536 372.076 305.130 371.524 305.578  c
370.972 306.026 370.352 306.250 369.665 306.250  c
369.165 306.250 368.602 306.161 367.977 305.984  c
367.779 305.921 367.618 305.890 367.493 305.890  c
367.357 305.890 367.253 305.968 367.180 306.125  c
366.899 306.125 l
366.899 303.250 l
367.180 303.250 l
367.347 304.072 367.662 304.692 368.126 305.109  c
368.589 305.526 369.107 305.734 369.680 305.734  c
370.086 305.734 370.417 305.614 370.672 305.375  c
370.928 305.135 371.055 304.849 371.055 304.515  c
371.055 304.109 370.912 303.768 370.626 303.492  c
370.339 303.216 369.771 302.867 368.922 302.445  c
368.073 302.023 367.519 301.645 367.258 301.312  c
366.988 300.979 366.852 300.557 366.852 300.046  c
366.852 299.380 367.079 298.825 367.532 298.382  c
367.985 297.940 368.576 297.718 369.305 297.718  c
369.618 297.718 369.998 297.781 370.446 297.906  c
370.748 298.000 370.951 298.046 371.055 298.046  c
371.149 298.046 371.222 298.026 371.274 297.984  c
371.326 297.942 371.383 297.854 371.446 297.718  c
371.743 297.718 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
2.00000 323.500 m
389.000 323.500 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
222 345 11 15 rc
newpath
229.375 349.687 m
228.875 351.406 l
229.875 351.406 l
229.765 351.812 l
228.781 351.812 l
227.687 355.546 l
227.572 355.953 227.515 356.213 227.515 356.328  c
227.515 356.401 227.531 356.458 227.562 356.500  c
227.593 356.541 227.635 356.562 227.687 356.562  c
227.791 356.562 227.927 356.484 228.093 356.328  c
228.197 356.244 228.427 355.984 228.781 355.546  c
228.984 355.718 l
228.599 356.281 228.234 356.677 227.890 356.906  c
227.651 357.072 227.411 357.156 227.171 357.156  c
226.984 357.156 226.830 357.096 226.710 356.976  c
226.591 356.856 226.531 356.708 226.531 356.531  c
226.531 356.302 226.599 355.953 226.734 355.484  c
227.796 351.812 l
226.843 351.812 l
226.906 351.562 l
227.364 351.437 227.750 351.247 228.062 350.992  c
228.375 350.737 228.718 350.302 229.093 349.687  c
229.375 349.687 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
131.000 323.500 m
131.000 327.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
134.531 338.234 m
136.625 337.218 l
136.828 337.218 l
136.828 344.484 l
136.828 344.963 136.849 345.263 136.890 345.382  c
136.932 345.502 137.015 345.593 137.140 345.656  c
137.265 345.718 137.520 345.755 137.906 345.765  c
137.906 346.000 l
134.671 346.000 l
134.671 345.765 l
135.078 345.755 135.341 345.718 135.460 345.656  c
135.580 345.593 135.664 345.510 135.710 345.406  c
135.757 345.302 135.781 344.994 135.781 344.484  c
135.781 339.843 l
135.781 339.208 135.760 338.802 135.718 338.625  c
135.687 338.489 135.632 338.390 135.554 338.328  c
135.476 338.265 135.380 338.234 135.265 338.234  c
135.109 338.234 134.895 338.302 134.625 338.437  c
134.531 338.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
195.500 323.500 m
195.500 327.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
202.953 344.343 m
202.359 346.000 l
197.281 346.000 l
197.281 345.765 l
198.770 344.401 199.820 343.286 200.429 342.421  c
201.039 341.557 201.343 340.770 201.343 340.062  c
201.343 339.510 201.177 339.059 200.843 338.710  c
200.510 338.362 200.109 338.187 199.640 338.187  c
199.224 338.187 198.846 338.309 198.507 338.554  c
198.169 338.799 197.921 339.161 197.765 339.640  c
197.531 339.640 l
197.635 338.859 197.906 338.260 198.343 337.843  c
198.781 337.427 199.328 337.218 199.984 337.218  c
200.682 337.218 201.265 337.442 201.734 337.890  c
202.203 338.338 202.437 338.864 202.437 339.468  c
202.437 339.906 202.333 340.343 202.125 340.781  c
201.812 341.468 201.307 342.192 200.609 342.953  c
199.557 344.109 198.895 344.807 198.625 345.046  c
200.875 345.046 l
201.333 345.046 201.653 345.028 201.835 344.992  c
202.018 344.955 202.184 344.885 202.335 344.781  c
202.487 344.677 202.614 344.531 202.718 344.343  c
202.953 344.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
260.000 323.500 m
260.000 327.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
262.656 339.031 m
262.906 338.447 263.218 338.000 263.593 337.687  c
263.968 337.375 264.432 337.218 264.984 337.218  c
265.682 337.218 266.213 337.442 266.578 337.890  c
266.859 338.224 267.000 338.578 267.000 338.953  c
267.000 339.588 266.604 340.239 265.812 340.906  c
266.343 341.114 266.744 341.411 267.015 341.796  c
267.286 342.182 267.421 342.635 267.421 343.156  c
267.421 343.895 267.182 344.536 266.703 345.078  c
266.088 345.796 265.197 346.156 264.031 346.156  c
263.447 346.156 263.052 346.083 262.843 345.937  c
262.635 345.791 262.531 345.635 262.531 345.468  c
262.531 345.343 262.580 345.237 262.679 345.148  c
262.778 345.059 262.895 345.015 263.031 345.015  c
263.135 345.015 263.244 345.031 263.359 345.062  c
263.432 345.083 263.596 345.158 263.851 345.289  c
264.106 345.419 264.281 345.500 264.375 345.531  c
264.531 345.572 264.697 345.593 264.875 345.593  c
265.302 345.593 265.677 345.427 266.000 345.093  c
266.322 344.760 266.484 344.364 266.484 343.906  c
266.484 343.572 266.411 343.250 266.265 342.937  c
266.151 342.697 266.026 342.515 265.890 342.390  c
265.713 342.224 265.466 342.072 265.148 341.937  c
264.830 341.802 264.505 341.734 264.171 341.734  c
263.968 341.734 l
263.968 341.531 l
264.302 341.489 264.638 341.369 264.976 341.171  c
265.315 340.974 265.559 340.737 265.710 340.460  c
265.862 340.184 265.937 339.875 265.937 339.531  c
265.937 339.104 265.802 338.755 265.531 338.484  c
265.260 338.213 264.921 338.078 264.515 338.078  c
263.859 338.078 263.312 338.427 262.875 339.125  c
262.656 339.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
324.500 323.500 m
324.500 327.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
332.046 342.828 m
332.046 343.734 l
330.890 343.734 l
330.890 346.000 l
329.843 346.000 l
329.843 343.734 l
326.203 343.734 l
326.203 342.921 l
330.203 337.218 l
330.890 337.218 l
330.890 342.828 l
332.046 342.828 l
h
329.843 342.828 m
329.843 338.546 l
326.828 342.828 l
329.843 342.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
66.5000 388.000 m
66.5000 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
41 155 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
66.5000 259.000 m
62.5000 259.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
59.5312 261.234 m
61.6250 260.218 l
61.8281 260.218 l
61.8281 267.484 l
61.8281 267.963 61.8489 268.263 61.8906 268.382  c
61.9322 268.502 62.0156 268.593 62.1406 268.656  c
62.2656 268.718 62.5208 268.755 62.9062 268.765  c
62.9062 269.000 l
59.6718 269.000 l
59.6718 268.765 l
60.0781 268.755 60.3411 268.718 60.4609 268.656  c
60.5807 268.593 60.6640 268.510 60.7109 268.406  c
60.7578 268.302 60.7812 267.994 60.7812 267.484  c
60.7812 262.843 l
60.7812 262.208 60.7604 261.802 60.7187 261.625  c
60.6875 261.489 60.6328 261.390 60.5546 261.328  c
60.4765 261.265 60.3802 261.234 60.2656 261.234  c
60.1093 261.234 59.8958 261.302 59.6250 261.437  c
59.5312 261.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
66.5000 194.500 m
62.5000 194.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
63.9531 202.343 m
63.3593 204.000 l
58.2812 204.000 l
58.2812 203.765 l
59.7708 202.401 60.8203 201.286 61.4296 200.421  c
62.0390 199.557 62.3437 198.770 62.3437 198.062  c
62.3437 197.510 62.1770 197.059 61.8437 196.710  c
61.5104 196.362 61.1093 196.187 60.6406 196.187  c
60.2239 196.187 59.8463 196.309 59.5078 196.554  c
59.1692 196.799 58.9218 197.161 58.7656 197.640  c
58.5312 197.640 l
58.6354 196.859 58.9062 196.260 59.3437 195.843  c
59.7812 195.427 60.3281 195.218 60.9843 195.218  c
61.6822 195.218 62.2656 195.442 62.7343 195.890  c
63.2031 196.338 63.4375 196.864 63.4375 197.468  c
63.4375 197.906 63.3333 198.343 63.1250 198.781  c
62.8125 199.468 62.3072 200.192 61.6093 200.953  c
60.5572 202.109 59.8958 202.807 59.6250 203.046  c
61.8750 203.046 l
62.3333 203.046 62.6536 203.028 62.8359 202.992  c
63.0182 202.955 63.1849 202.885 63.3359 202.781  c
63.4869 202.677 63.6145 202.531 63.7187 202.343  c
63.9531 202.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
66.5000 130.000 m
62.5000 130.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
58.6562 133.031 m
58.9062 132.447 59.2187 132.000 59.5937 131.687  c
59.9687 131.375 60.4322 131.218 60.9843 131.218  c
61.6822 131.218 62.2135 131.442 62.5781 131.890  c
62.8593 132.224 63.0000 132.578 63.0000 132.953  c
63.0000 133.588 62.6041 134.239 61.8125 134.906  c
62.3437 135.114 62.7447 135.411 63.0156 135.796  c
63.2864 136.182 63.4218 136.635 63.4218 137.156  c
63.4218 137.895 63.1822 138.536 62.7031 139.078  c
62.0885 139.796 61.1979 140.156 60.0312 140.156  c
59.4479 140.156 59.0520 140.083 58.8437 139.937  c
58.6354 139.791 58.5312 139.635 58.5312 139.468  c
58.5312 139.343 58.5807 139.237 58.6796 139.148  c
58.7786 139.059 58.8958 139.015 59.0312 139.015  c
59.1354 139.015 59.2447 139.031 59.3593 139.062  c
59.4322 139.083 59.5963 139.158 59.8515 139.289  c
60.1067 139.419 60.2812 139.500 60.3750 139.531  c
60.5312 139.572 60.6979 139.593 60.8750 139.593  c
61.3020 139.593 61.6770 139.427 62.0000 139.093  c
62.3229 138.760 62.4843 138.364 62.4843 137.906  c
62.4843 137.572 62.4114 137.250 62.2656 136.937  c
62.1510 136.697 62.0260 136.515 61.8906 136.390  c
61.7135 136.224 61.4661 136.072 61.1484 135.937  c
60.8307 135.802 60.5052 135.734 60.1718 135.734  c
59.9687 135.734 l
59.9687 135.531 l
60.3020 135.489 60.6380 135.369 60.9765 135.171  c
61.3151 134.974 61.5599 134.737 61.7109 134.460  c
61.8619 134.184 61.9375 133.875 61.9375 133.531  c
61.9375 133.104 61.8020 132.755 61.5312 132.484  c
61.2604 132.213 60.9218 132.078 60.5156 132.078  c
59.8593 132.078 59.3125 132.427 58.8750 133.125  c
58.6562 133.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
66.5000 65.5000 m
62.5000 65.5000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
64.0468 71.8281 m
64.0468 72.7343 l
62.8906 72.7343 l
62.8906 75.0000 l
61.8437 75.0000 l
61.8437 72.7343 l
58.2031 72.7343 l
58.2031 71.9218 l
62.2031 66.2187 l
62.8906 66.2187 l
62.8906 71.8281 l
64.0468 71.8281 l
h
61.8437 71.8281 m
61.8437 67.5468 l
58.8281 71.8281 l
61.8437 71.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
